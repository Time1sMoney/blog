---
import { getCollection, type CollectionEntry } from 'astro:content';
import MainLayout from '@/layouts/main.layout.astro';
import { Icon } from 'astro-icon/components';
import Link from '@/components/Link.astro';
import dayjs from 'dayjs';
interface Props {
  entries: CollectionEntry<'blog'>[];
}
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const allUniqueTags = [
    ...new Set(posts.map((entry) => entry.data.tags).flat())
  ];

  return allUniqueTags.map((tag) => {
    const filterdPosts = posts.filter((entry) => entry.data.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filterdPosts }
    };
  });
}
const { tag } = Astro.params;
const { posts } = Astro.props;
---

<MainLayout>
  <div class="w-full space-y-4 p-4">
    <div class="txet-lg">
      <button
        id="goback"
        class="flex items-center gap-4 border-b-2 border-dashed border-transparent hover:border-primary active:text-primary active:border-transparent"
        onclick="
        history.back()
        "
      >
        <Icon
          name="tabler:chevron-left"
          size="18"
          class="group-hover:scale-125"
        />
        Back
      </button>
    </div>
    <p class="text-base opacity-50">All the articles with the tag "{tag}".</p>
    <ul class="space-y-4 py-4 text-lg">
      {
        posts.map(({ data, id }) => (
          <li class="flex items-center gap-4 group border-b py-2 hover:shadow-lg cursor-pointer">
            <Link href={`/posts/${id}`}>{data.title}</Link>
            <span class="opacity-70">
              {dayjs(data.pubDateTime).format('YYYY-MM-DD')}
            </span>
          </li>
        ))
      }
    </ul>
  </div>
</MainLayout>
